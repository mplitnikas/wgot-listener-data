AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  wgot-listeners-data

  SAM template for service to track web radio listener stats

Globals:
  Function:
    Timeout: 3

Parameters:
  ListenersUrl:
    Description: "Icecast api url to fetch listener data from"
    Type: String
  StationCallsign:
    Description: "Callsign of station as listed in icecast feed"
    Type: String
    AllowedPattern: ^[A-Z]{4}$
    ConstraintDescription: "Must be FCC callsign, four capital letters"

Resources:
  IcecastScrapeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: scraper/
      Handler: app.lambda_handler
      Runtime: python3.6
      Environment:
        Variables:
          StatsTable: !Ref ListenerTable
          ListenersUrl: !Ref ListenersUrl
          StationCallsign: !Ref StationCallsign
      Role: !GetAtt LambdaDynamoRole.Arn

  ListenerTable:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
      - AttributeName: timestamp
        KeyType: HASH
      - AttributeName: listeners
        KeyType: RANGE
      AttributeDefinitions:
      - AttributeName: timestamp
        AttributeType: N
      - AttributeName: listeners
        AttributeType: N
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  TimerEvent:
    Type: AWS::Events::Rule
    DependsOn: IcecastScrapeFunction
    Properties:
      ScheduleExpression: cron(0/5 * * * ? *)
      Targets:
      - Id: IcecastScrapeFunction
        Arn: !GetAtt IcecastScrapeFunction.Arn

  LambdaDynamoRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
                - "edgelambda.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "listeners-update-dynamo"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "dynamodb:*"
                Resource: !GetAtt ListenerTable.Arn

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref IcecastScrapeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt TimerEvent.Arn

Outputs:
    IcecastScrapeFunction:
      Description: "Function to scrape icecast data from pacifica"
      Value: !GetAtt IcecastScrapeFunction.Arn
    IcecastDataListenersTable:
      Description: "Listeners data per timestamp from pacifica api fetches"
      Value: !GetAtt ListenerTable.Arn
